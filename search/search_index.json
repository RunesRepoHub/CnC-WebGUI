{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Getting Started With CnC-WebGUI","text":"<p>This is still an internal tools and has not been made available to the public yet. It is also still under development and is not yet production ready.</p>"},{"location":"index.html#basic-operation-procedures-bop","title":"Basic Operation Procedures (BOP)","text":"<ul> <li>Collect CPU, RAM and Disk usage.</li> <li>Collect data on docker version and other SOP (standard operation procedure) software version.</li> <li>Uptimer and warning.</li> </ul>"},{"location":"index.html#advanced-operation-procedures-aop","title":"Advanced Operation Procedures (AOP)","text":"<ul> <li>Change basic configs</li> <li>Reboot/shutdown/update/upgrade</li> <li>Overview of cron jobs</li> <li>Change and update cron jobs</li> <li>Tailscale VPN</li> <li>Docker images sync vulnerability scan</li> </ul>"},{"location":"index.html#development","title":"Development","text":"<p>Management interface</p> <ul> <li> <p>This will be built based on a homemade docker stack, which includes Nginx for WebGUI and MySQL for database.</p> </li> <li> <p>CnC WebGUI Managed will be made in HTML, Php, CSS and Javascript. CnC Monitor Agent will be made in bash, with either cron or systemctl as run-timer.</p> </li> </ul>"},{"location":"index.html#remote-management","title":"Remote Management","text":"<ul> <li> <p>It will also be possible to deploy with Tailscale VPN, so that a connection can be established between servers that are not on the same local network.</p> </li> <li> <p>It may also be possible to use another program, but I have not tested other than Tailscale with automatic deployment.</p> </li> </ul>"},{"location":"index.html#easy-deployment","title":"Easy Deployment","text":"<p>The idea behind this whole system is to have a better and faster overview of all my Linux servers, but without adding a maintenance problem with more new \"Pre-made\" software.</p> <p>So I make a bash script that sets up a Linux server to a CnC WebGUI Manager, as a Docker container and then I make another bash script to install the CnC Monitor Agent, which sends the data from the Linux servers to the CnC WebGUI Manager.</p> <p>It will most likely be added 2 separate bash scripts containing Tailscale VPN for Remote Management.</p>"},{"location":"changelog.html","title":"Change log for CnC-WebGUI and CnC-Agent","text":""},{"location":"changelog.html#12-first-release","title":"1.2 (First Release)","text":"<ul> <li>Added basic code for everything</li> <li>Made all the basic script to collect information</li> <li>Made basic web interface</li> </ul>"},{"location":"changelog.html#14-full-update-for-first-release","title":"1.4 (Full Update for first release)","text":""},{"location":"crud.html","title":"CRUD Source Code","text":"<p>Your REST API is now running on http://localhost:3000. You can use curl to access, update, upload, and delete data from the MySQL database:</p> <p>To GET all items: <pre><code>curl http://localhost:3000/items\n</code></pre></p> <p>To POST (create) a new item:</p> <pre><code>curl -X POST -H \"Content-Type: application/json\" -d '{\"name\": \"New Item\", \"description\": \"Description of the new item\"}' http://localhost:3000/items\n</code></pre> <p>To PUT (update) an item with a specific ID (replace :id with the actual ID): <pre><code>curl -X PUT -H \"Content-Type: application/json\" -d '{\"name\": \"Updated Item\", \"description\": \"Updated description\"}' http://localhost:3000/items/:id\n</code></pre></p> <p>To DELETE an item with a specific ID (replace :id with the actual ID):</p> <pre><code>curl -X DELETE http://localhost:3000/items/:id\n</code></pre> <p>Make sure to replace 'your_username' and 'your_password' with your MySQL credentials in the database connection configuration.</p>"},{"location":"install.html","title":"CnC-WebGUI Installation","text":""},{"location":"install.html#setup","title":"Setup","text":"<ul> <li>You have to be root user.</li> <li>Make sure to change the hostname before running this.</li> <li>Make sure to run.<ol> <li>apt-get update</li> <li>apt-get upgrade</li> </ol> </li> </ul>"},{"location":"install.html#install","title":"Install","text":""},{"location":"install.html#docker-images","title":"Docker images","text":"<p>The images has not been made public yet, so if you want to use this right now. You will have to build the images yourself.</p> <p>Run this one line command for a automated install.</p> <p>This command will install docker, docker cli and docker compose, and when docker has been installed or updated, then the installation script will start running.</p> <p><pre><code>bash &lt;(wget -qO- https://raw.githubusercontent.com/RunesRepoHub/CnC-WebGUI/Production/Functions/Install.sh)\n</code></pre> This should make the 3 docker images and after they have been made it will use the docker-compose file to start the 3 dockers. When the 3 dockers are up and running, check the you don't have errors on the website.</p> <p>(The WebGUI will give php errors at startup because it is still waiting for the database to come online) When it has come online you can then install the Agent to the servers you want to moniter.</p>"},{"location":"install.html#install-agent","title":"Install Agent","text":"<p>Run the following commands on a Debian 9/10/11/12 or Ubuntu 20.04/22.04 server to install the agent.</p> <p>The docker web, api and db containers has to be running.</p> <pre><code>bash &lt;(wget -qO- https://raw.githubusercontent.com/RunesRepoHub/CnC-Agent/Production/Install-Agent-Only.sh)\n</code></pre>"},{"location":"install.html#uninstall","title":"Uninstall","text":"<p>I have made it easy to Uninstall aswell.</p>"},{"location":"install.html#webgui-server","title":"WebGUI Server","text":"<p>How to uninstall the dockers and delete all their data on the Web Server?</p> <p>Use this one line command to call on a Uninstall.sh script the will do the rest: <pre><code>bash ~/CnC-WebGUI/Functions/Uninstall.sh  \n</code></pre></p>"},{"location":"install.html#agents","title":"Agents","text":"<p>How to uninstall the Agents and delete all their data on the Server?</p> <p>Use this one line command to call on a Uninstall.sh script the will do the rest: <pre><code>bash ~/CnC-Agent/Uninstall.sh  \n</code></pre></p>"},{"location":"requirement.html","title":"Requirements CnC-WebGUI","text":""},{"location":"requirement.html#supported-platforms","title":"Supported Platforms:","text":""},{"location":"requirement.html#requriements","title":"Requriements","text":"<p>OS Supported:</p> <ul> <li>Debian 10 (Tested) (Web/DB &amp; Agent)</li> <li>Debian 11 (Tested) (Web/DB &amp; Agent)</li> <li>Ubuntu 22.04 (Tested) (Web/DB &amp; Agent)</li> </ul> <p>This has been setup as root on fresh installs</p> <p>Web/db Server</p> <ul> <li>Git install on the web/db server</li> <li>Docker + Docker-compose installed on the web/db server</li> </ul> <p>Agent Devices</p> <ul> <li>No packages requried now (May change in the future)</li> </ul>"},{"location":"requirement.html#made-with","title":"Made With:","text":""}]}